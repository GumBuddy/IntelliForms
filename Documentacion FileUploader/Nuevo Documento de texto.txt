Documentación del Componente
Descripción General
El componente FileUploader proporciona una interfaz para subir documentos a Google Cloud Storage mediante Signed URLs. Está diseñado para ser parte de la aplicación IntelliForms, permitiendo a los usuarios cargar documentos que serán procesados por la API de Gemini para generar formularios automáticamente.

Características Principales
Soporte para múltiples formatos de archivo: .txt, .pdf, .jpg, .png, .doc, .docx
Validación completa de archivos (tipo, extensión y tamaño)
Interfaz de usuario intuitiva con arrastrar y soltar
Indicador visual de progreso durante la carga
Manejo robusto de errores con mensajes claros
Diseño responsivo para dispositivos móviles y escritorio
Flujo de Trabajo
El usuario selecciona un archivo mediante el input o arrastrando y soltando
El componente valida el archivo (tipo, extensión y tamaño)
Si la validación es exitosa, se muestra información del archivo seleccionado
Al hacer clic en "Subir Archivo":
Se solicita una Signed URL a la Cloud Function
El archivo se sube directamente a Google Cloud Storage
Se notifica al backend para iniciar el procesamiento
Se muestra el progreso de carga y el estado final
Configuración
ALLOWED_FILE_TYPES: Array con los tipos MIME permitidos
MAX_FILE_SIZE: Tamaño máximo de archivo (10MB)
ALLOWED_EXTENSIONS: Extensiones de archivo permitidas
Funciones Principales
handleFileSelection: Maneja la selección de archivos y realiza validaciones
initiateFileUpload: Orquesta el proceso completo de carga
fetchSignedUrl: Obtiene una URL firmada desde la Cloud Function
uploadFileToStorage: Sube el archivo a Google Cloud Storage
notifyFileProcessing: Notifica al backend que el archivo está listo para procesar
simulateUploadProgress: Simula el progreso de carga para la UI
formatFileSize: Formatea el tamaño de archivo a formato legible
resetUploader: Reinicia el estado del componente
Buenas Prácticas Implementadas
Nombres descriptivos: Todas las variables y funciones tienen nombres claros que explican su propósito
Separación de responsabilidades: Cada función tiene una única responsabilidad
Manejo de errores: Captura y muestra errores de manera consistente
Documentación completa: JSDoc para todas las funciones y componentes
Constantes en mayúsculas: Para valores de configuración que no cambian
Referencias a DOM: Uso de useRef para acceder al input de archivo
Estado gestionado: Uso de hooks de React para gestionar el estado del componente
Validaciones completas: Verificación de tipo MIME, extensión y tamaño de archivo
Interfaz accesible: Etiquetas y atributos ARIA para accesibilidad
Diseño responsivo: Adaptado a diferentes tamaños de pantalla
Requisitos del Backend
Para que este componente funcione correctamente, se necesitan dos Cloud Functions:

getSignedUrl:
Método: POST
Cuerpo: { fileName: string, fileType: string }
Respuesta: { signedUrl: string, fileUrl: string }
Propósito: Generar una URL firmada para subir el archivo a GCS
processFile:
Método: POST
Cuerpo: { fileName: string, fileUrl: string, fileType: string }
Respuesta: Confirmación de procesamiento iniciado
Propósito: Iniciar el procesamiento del archivo con la API de Gemini
Mejoras Futuras
Implementar progreso de carga real usando eventos de XMLHttpRequest
Agregar soporte para carga de múltiples archivos
Implementar reintentos automáticos en caso de fallos
Agregar vista previa de imágenes y PDFs antes de subir
Implementar carga reanudable para archivos grandes
Agregar soporte para carpetas completas